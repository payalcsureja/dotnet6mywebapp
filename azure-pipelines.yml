# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

variables:
  buildConfiguration: 'Release'  

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'Azure subscription 1 (6f9b1ff2-4a19-422f-81a7-b0271d9c9900)'
  
  # Web app name
  webAppName: 'dotnet6linuxmywebapp'
  
  # Resource group
  resourceGroupName: 'dotnet6'
 
  # Environment name
  environmentName: 'dotnet6linuxmywebapp'
 
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
stages:
- stage: BuildPublish
  displayName: Build and Publish stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps: 
    - script: dotnet publish --configuration $(buildConfiguration)
      displayName: 'dotnet publish $(buildConfiguration)'    
    - task: UseDotNet@2
      inputs:
        version: '6.0.x'
        includePreviewVersions: true # Required for preview versions 
    - task: DotNetCoreCLI@2
      inputs:
        command: publish 
        arguments: --configuration $(BuildConfiguration) --self-contained -r linux-x64 --output $(build.artifactstagingdirectory)
        projects: '**/*.csproj'
        publishWebProjects: true
        zipAfterPublish: true
      enabled: true
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'drop'
    

  
- stage: Deploy
  displayName: Deploy stage
  dependsOn: BuildPublish
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool: 
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:            
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: dotnet6myweb-Deploy'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webApp
              appName: $(webAppName)               
              package: $(Pipeline.Workspace)/drop/APP.zip